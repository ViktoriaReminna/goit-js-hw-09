{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAASC,SAASC,cAAc,SAEhCC,GADcH,EAAOE,cAAc,UACpBF,EAAOE,cAAc,wBACpCE,EAAcJ,EAAOE,cAAc,sBACnCG,EAAWL,EAAOE,cAAc,wBA8BtC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAXbR,EAAOgB,iBAAiB,UA1BPC,IACfA,EAAMC,iBAEN,MAAMC,EAAaC,OAAOjB,EAAakB,OAEjCC,EAAOF,OAAOhB,EAAYiB,OAE1BE,EAASH,OAAOf,EAASgB,OAC/B,IAAIG,EAAQL,EACZ,IAAK,IAAIM,EAAI,EAAGA,EAAIF,EAAQE,IAAK,CAG/BnB,EAFiBmB,EAEOD,GACrBE,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACjBmB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAqBtB,QAAiBC,MAAU,IAGnDsB,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MAClBmB,EAAA7B,GAAS8B,OAAOG,QACd,sBAAoBxB,QAAeC,MAAU,IAGnDgB,GAASF,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nconst createBtnEl = formEl.querySelector('button');\nconst firstDelayEl = formEl.querySelector('input[name=\"delay\"]');\nconst delayStepEl = formEl.querySelector('input[name=\"step\"]');\nconst amountEl = formEl.querySelector('input[name=\"amount\"]');\n\nconst onSubmit = event => {\n  event.preventDefault();\n\n  const firstDelay = Number(firstDelayEl.value);\n\n  const step = Number(delayStepEl.value);\n\n  const amount = Number(amountEl.value);\n  let delay = firstDelay;\n  for (let i = 0; i < amount; i++) {\n    const position = i;\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay += step;\n  }\n};\nformEl.addEventListener('submit', onSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$firstDelayEl","$47d4ff9957288465$var$delayStepEl","$47d4ff9957288465$var$amountEl","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","firstDelay","Number","value","step","amount","delay1","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.c47aeb2a.js.map"}